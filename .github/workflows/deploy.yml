name: WordPress Docker Deployment to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_IMAGE_NAME: your-docker-username/wordpress-render

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3

    # Create public directory and download WordPress
    - name: Setup WordPress
      run: |
        mkdir -p public
        cd public
        wget https://wordpress.org/latest.tar.gz
        tar xzf latest.tar.gz --strip-components=1
        rm latest.tar.gz
        
        # Create wp-config.php with environment variables
        cp wp-config-sample.php wp-config.php
        sed -i 's/database_name_here/getenv("WORDPRESS_DB_NAME")/' wp-config.php
        sed -i 's/username_here/getenv("WORDPRESS_DB_USER")/' wp-config.php
        sed -i 's/password_here/getenv("WORDPRESS_DB_PASSWORD")/' wp-config.php
        sed -i 's/localhost/getenv("WORDPRESS_DB_HOST")/' wp-config.php

    # Create render.yaml for Render configuration
    - name: Create Render config
      run: |
        cat > render.yaml <<EOL
        services:
          - type: web
            name: wordpress
            env: docker
            dockerfilePath: ./Dockerfile
            envVars:
              - key: WORDPRESS_DB_HOST
                sync: false
              - key: WORDPRESS_DB_NAME
                sync: false
              - key: WORDPRESS_DB_USER
                sync: false
              - key: WORDPRESS_DB_PASSWORD
                sync: false
              - key: UPLOADTHING_SECRET
                sync: false
              - key: UPLOADTHING_APP_ID
                sync: false
            disk:
              name: wordpress-data
              mountPath: /var/www/html/wp-content/uploads
              sizeGB: 1
        EOL

    # Deploy to Render using deploy hook
    - name: Deploy to Render
      run: |
        curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK_URL }}